#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.5 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 56 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 16 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 0 0 0 0 -1
-1 2 37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 0 0 0 0 -1
-1 2 38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 128 253 2 0 0 0 -1
-1 2 38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 128 253 2 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 255 0 0 0 0 -1 -1
2 37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 255 0 0 0 0 -1 -1
2 35 #"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 0 255 0 0 0 0 -1 -1
2 39 #"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 255 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 134 247 253 0 0 0 -1
-1 2 42 #"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 134 247 253 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 0 0 0 0 0 -1 -1
2 36 #"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1 1 1 255 0 0 0 0 0 -1 -1
2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 632 0 4 3 85
(4
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(5
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 282
(6
 #"#reader(lib \"htdp-advanced-reader.ss\" \"lang\")((modname |OLeary-F"
 #"elix-Garcia-Rachid Valid Sol|) (read-case-sensitive #t) (teachpacks "
 #"((lib \"image.rkt\" \"teachpack\" \"2htdp\"))) (htdp-settings #(#t c"
 #"onstructor repeating-decimal #t #t none #f ((lib \"image.rkt\" \"tea"
 #"chpack\" \"2htdp\")) #f)))"
) 0 0 4 29 1 #"\n"
0 0 25 29 1 #"\n"
0 9         112 21           0 0           0 1 9         103 21
          0 0           0 16 0 14 3 6 #"Grade:"
0 0 25 3 1 #" "
0 0 14 3 1 #"A"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 14 3 4 #"Good"
0 0 25 3 1 #" "
0 0 14 3 4 #"job!"
0 0 25 3 1 #" "
0 0 14 3 3 #"See"
0 0 25 3 1 #" "
0 0 14 3 7 #"comment"
0 0 25 3 1 #" "
0 0 14 3 5 #"about"
0 0 25 3 1 #" "
0 0 14 3 8 #"testing."
0           0 0           0 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 7 #"require"
0 0 25 3 1 #" "
0 0 14 3 17 #"2htdp/abstraction"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 10 #"; Data Def"
0 0 25 29 1 #"\n"
0 0 17 3 86
(7
 #";  A board position, bpos, is a structure, (make-posn a b), where a "
 #"and be are natnums"
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 10 #"; Examples"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"P1"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 21 3 1 #"3"
0 0 25 3 1 #" "
0 0 21 3 1 #"2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 2 #"P2"
0 0 25 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 21 3 1 #"0"
0 0 25 3 1 #" "
0 0 21 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 17 3 35 #"; natnum --> (listof bpos) or false"
0 0 25 29 1 #"\n"
0 0 17 3 67
#"; Purpose: To place n queens on a nxn board; otherwise return false"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 12 #"place-queens"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 25 3 2 #" ("
0 0 17 3 26 #"; natnum --> (listof bpos)"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 64
#"; Purpose: To returns a list of all the positions in a nxn board"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"total-board"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 15 3 9 #"for*/list"
0 0 25 3 3 #" [("
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #") ("
0 0 14 3 1 #"j"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 4 #")] ("
0 0 14 3 9 #"make-posn"
0 0 25 3 1 #" "
0 0 14 3 1 #"i"
0 0 25 3 1 #" "
0 0 14 3 1 #"j"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 10 #"init-board"
0 0 25 3 2 #" ("
0 0 14 3 11 #"total-board"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 38 #"; bpos (listof bpos) --> (listof bpos)"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 61
#"; Purpose: To remove the positions in the given list that are"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 40 #";          threatened by the given bpos."
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 13 #"rm-threatened"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 25 3 1 #" "
0 0 14 3 3 #"lob"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 15 3 5 #"local"
0 0 25 3 2 #" ("
0 0 17 3 18 #"; bpos --> boolean"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                    "
0 0 17 3 65
#"; Purpose: To determine if the given bpos is threatened by a-bpos"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                    "
0 0 17 3 65
#"; Note: A bpos, target, is threatened by a bpos B if target and B"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                    "
0 0 17 3 69
(8
 #";       are in the same column, in the same row, or if the differenc"
 #"e"
) 0 0 25 29 1 #"\n"
0 0 25 3 20 #"                    "
0 0 17 3 64
#";       between the xs is equal to the difference between the ys"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                    "
0 0 17 3 47 #";       (i.e., target is on a diagonal from B)."
0 0 25 29 1 #"\n"
0 0 25 3 21 #"                    ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"threatened?"
0 0 25 3 1 #" "
0 0 14 3 6 #"target"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 23 #"                      ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 6 #"target"
0 0 25 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 6 #"target"
0 0 25 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 27 #"                          ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 6 #"target"
0 0 25 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 30 #"                             ("
0 0 14 3 3 #"abs"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 6 #"target"
0 0 25 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 25 3 7 #")))))))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 6 #"filter"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"p"
0 0 25 3 3 #") ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 11 #"threatened?"
0 0 25 3 1 #" "
0 0 14 3 1 #"p"
0 0 25 3 4 #"))) "
0 0 14 3 3 #"lob"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 49 #"; (listof bpos) natnum --> (listof bpos) or false"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 72
(9
 #"; Purpose: To place n queens in the given list of unthreatened posit"
 #"ions"
) 0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 74
(10
 #"; Algorithm: If there are no unthreatened positions are left and the"
 #"re are"
) 0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 71
(11
 #";            queens left to place, then there is no solution and ret"
 #"urn"
) 0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 74
(12
 #";            false. Otherwise if there are no more queens to place, "
 #"return"
) 0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 74
(13
 #";            the empty list of bpos. Otherwise, try placing a queen "
 #"in the"
) 0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 72
(14
 #";            first unthreatened position and n-1 queens in the remai"
 #"ning"
) 0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 74
(15
 #";            unthreatened positions. If it works, return the list wi"
 #"th the"
) 0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 69
(16
 #";            first unthreatened position and the solution for the n-"
 #"1"
) 0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 71
(17
 #";            queens else backtrack and try finding a solution using "
 #"the"
) 0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 44 #";            rest of unthreatened solutions."
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 67
#"; Termination: At each step, either or both the number of queens is"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 69
(18
 #";              reduced by 1 and the remaining number of unthreatened"
 #" "
) 0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 69
(19
 #";              positions is reduced. Eventually, either the number o"
 #"f"
) 0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 70
(20
 #";              queens becomes 0 or the unthreatened positions  becom"
 #"es"
) 0 0 25 29 1 #"\n"
0 0 25 3 10 #"          "
0 0 17 3 47 #";              empty and the program terminates"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"place-them"
0 0 25 3 1 #" "
0 0 14 3 15 #"valid-positions"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 15 #"valid-positions"
0 0 25 3 3 #") ("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 21 3 1 #"0"
0 0 25 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                  [("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 1 #" "
0 0 21 3 1 #"0"
0 0 25 3 2 #") "
0 0 21 3 1 #"'"
0 0 25 3 3 #"()]"
0 0 25 29 1 #"\n"
0 0 25 3 19 #"                  ["
0 0 14 3 4 #"else"
0 0 25 29 1 #"\n"
0 0 25 3 20 #"                   ("
0 0 15 3 5 #"local"
0 0 25 3 3 #" (("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 16 #"sol-other-queens"
0 0 25 3 2 #" ("
0 0 14 3 10 #"place-them"
0 0 25 3 2 #" ("
0 0 14 3 13 #"rm-threatened"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 15 #"valid-positions"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 80
(21
 #"                                                                    "
 #"           ("
) 0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 15 #"valid-positions"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 65
#"                                                                ("
0 0 14 3 4 #"sub1"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 4 #"))))"
0 0 25 29 1 #"\n"
0 0 25 3 22 #"                     ("
0 0 15 3 4 #"cond"
0 0 25 3 3 #" [("
0 0 14 3 6 #"false?"
0 0 25 3 1 #" "
0 0 14 3 16 #"sol-other-queens"
0 0 25 3 3 #") ("
0 0 14 3 10 #"place-them"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 15 #"valid-positions"
0 0 25 3 2 #") "
0 0 14 3 1 #"n"
0 0 25 3 2 #")]"
0 0 25 29 1 #"\n"
0 0 25 3 28 #"                           ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 15 #"valid-positions"
0 0 25 3 2 #") "
0 0 14 3 16 #"sol-other-queens"
0 0 25 3 8 #")]))])))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 14 3 10 #"place-them"
0 0 25 3 1 #" "
0 0 14 3 10 #"init-board"
0 0 25 3 1 #" "
0 0 14 3 1 #"n"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 17 3 39 #";; valid-sol?: (listof bpos) -> boolean"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 17 3 52 #";; Purpose: Determine if the current board is valid."
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"valid-sol?"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ["
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 17 3 39 #";; in-danger?: a-bpos a-bpos -> boolean"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 10 #"in-danger?"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 2 #"or"
0 0 25 3 2 #" ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 3 #"abs"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 3 #") ("
0 0 14 3 6 #"posn-x"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 15 #"              ("
0 0 14 3 3 #"abs"
0 0 25 3 2 #" ("
0 0 14 3 1 #"-"
0 0 25 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"p1"
0 0 25 3 3 #") ("
0 0 14 3 6 #"posn-y"
0 0 25 3 1 #" "
0 0 14 3 2 #"p2"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 25 29 1 #"\n"
0 0 25 3 5 #"     "
0 0 17 3 49 #";; threatened?: a-bpos (listof a-bpos) -> boolean"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 6 #"define"
0 0 25 3 2 #" ("
0 0 14 3 11 #"threatened?"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 14 3 5 #"ormap"
0 0 25 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"x"
0 0 25 3 3 #") ("
0 0 14 3 10 #"in-danger?"
0 0 25 3 1 #" "
0 0 14 3 1 #"x"
0 0 25 3 1 #" "
0 0 14 3 6 #"a-bpos"
0 0 25 3 3 #")) "
0 0 14 3 1 #"b"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ]"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      [("
0 0 14 3 6 #"empty?"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 2 #") "
0 0 21 3 2 #"#t"
0 0 25 3 1 #"]"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 3 #"and"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 11 #"threatened?"
0 0 25 3 2 #" ("
0 0 14 3 5 #"first"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #") ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 14 #"             ("
0 0 14 3 10 #"valid-sol?"
0 0 25 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 25 3 1 #" "
0 0 14 3 1 #"b"
0 0 25 3 7 #")))])))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 9         250 21           0 0           0 1 9         241 21
          0 0           0 39 0 14 3 3 #"You"
0 0 25 3 1 #" "
0 0 14 3 6 #"should"
0 0 25 3 1 #" "
0 0 14 3 4 #"have"
0 0 25 3 1 #" "
0 0 14 3 5 #"tests"
0 0 25 3 1 #" "
0 0 14 3 4 #"with"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 2 #" ("
0 0 14 3 6 #"listof"
0 0 25 3 1 #" "
0 0 14 3 4 #"bpos"
0 0 25 3 2 #") "
0 0 14 3 4 #"that"
0 0 25 3 1 #" "
0 0 14 3 2 #"is"
0 0 25 3 1 #" "
0 0 14 3 3 #"not"
0 0 25 3 1 #" "
0 0 14 3 1 #"a"
0 0 25 3 1 #" "
0 0 14 3 8 #"solution"
0 0 25 29 1 #"\n"
0 0 15 3 3 #"for"
0 0 25 3 1 #" "
0 0 14 3 6 #"boards"
0 0 25 3 1 #" "
0 0 14 3 2 #"of"
0 0 25 3 1 #" "
0 0 14 3 4 #"size"
0 0 25 3 1 #" "
0 0 21 3 1 #"3"
0 0 25 3 1 #" "
0 0 14 3 3 #"and"
0 0 25 3 1 #" "
0 0 21 3 2 #"4."
0           0 0           0 0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"valid-sol?"
0 0 25 3 2 #" ("
0 0 14 3 12 #"place-queens"
0 0 25 3 1 #" "
0 0 21 3 1 #"0"
0 0 25 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"valid-sol?"
0 0 25 3 2 #" ("
0 0 14 3 12 #"place-queens"
0 0 25 3 1 #" "
0 0 21 3 1 #"1"
0 0 25 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"place-queens"
0 0 25 3 1 #" "
0 0 21 3 1 #"2"
0 0 25 3 2 #") "
0 0 14 3 5 #"false"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 12 #"place-queens"
0 0 25 3 1 #" "
0 0 21 3 1 #"3"
0 0 25 3 2 #") "
0 0 14 3 5 #"false"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"valid-sol?"
0 0 25 3 2 #" ("
0 0 14 3 12 #"place-queens"
0 0 25 3 1 #" "
0 0 21 3 1 #"4"
0 0 25 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"valid-sol?"
0 0 25 3 2 #" ("
0 0 14 3 12 #"place-queens"
0 0 25 3 1 #" "
0 0 21 3 1 #"5"
0 0 25 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 25 3 2 #" ("
0 0 14 3 10 #"valid-sol?"
0 0 25 3 2 #" ("
0 0 14 3 12 #"place-queens"
0 0 25 3 1 #" "
0 0 21 3 1 #"8"
0 0 25 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0           0
